version: 2

workflows:
  version: 2
  deployment_pipeline:
    jobs:
      - build
      
      - publish-app-1-stage:
          requires:
            - build
      - approve-app-1-stage:
          requires:
            - publish-app-1-stage
          type: approval
      - approve-app-1-prod:
          requires:
            - approve-app-1-stage
          type: approval
      
      - publish-app-2-stage:
          requires:
             - build
      - approve-app-2-stage:
          requires:
            - publish-app-2-stage
          type: approval
      - approve-app-2-prod:
          requires:
            - approve-app-2-stage
          type: approval
jobs:
  build:
    machine: true
    environment: &environment_variables
      MODIFIED_APPS: /tmp/modified-apps
      MODIFIED_DIRS: /tmp/modified-dirs
    steps:
      - checkout
      - run:
          name: docker - authentication
          command: echo "docker login"
      - run:
          name: docker - build and deploy dockerfile(s)
          command: |
            if [ ${CIRCLE_BRANCH} = "master" ]; then
              MODIFIED_FILES=$(git whatchanged --name-only --pretty="" HEAD^..HEAD | sort | uniq)
            else
              MODIFIED_FILES=$(git whatchanged --name-only --pretty="" origin..HEAD | sort | uniq)
            fi

            for MODIFIED_FILE in ${MODIFIED_FILES}; do
              echo ${MODIFIED_FILE} | cut -d "/" -f1 >> ${MODIFIED_DIRS}
            done

            MODIFIED_PATHS=$(cat ${MODIFIED_DIRS} | sort | uniq)

            for MODIFIED_PATH in ${MODIFIED_PATHS}; do
              find "${MODIFIED_PATH}"/ -maxdepth 1 -iname "Dockerfile" -type f >> ${MODIFIED_APPS}
            done

            cat ${MODIFIED_APPS} | while read dockerfile
            do
              echo ${dockerfile}
              CONTAINER_JSON=$(find $(dirname ${dockerfile}) -iname "containers.json" -type f)
              CONTAINER_REGX='(.+\/deploy\/)(.+)(\/containers\.json)'
              CONTAINER_NAME=$([[ ${CONTAINER_JSON} =~ ${CONTAINER_REGX} ]] && echo ${BASH_REMATCH[2]} || echo "")
              echo "${CONTAINER_NAME}:${CIRCLE_SHA1?}"
            done
      - persist_to_workspace:
          root: /tmp
          paths:
            - modified-apps
            - modified-dirs
  publish: &publish
    machine: true
    environment:
      <<: *environment_variables
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: generic publish step
          command: echo "publishing container"
  publish-app-1-stage:
    <<: *publish
  publish-app-2-stage:
    <<: *publish